const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp –±–æ—Ç–æ–≤...\n');

// –¢–µ—Å—Ç WhatsApp –∞–¥–º–∏–Ω-–±–æ—Ç–∞
async function testWhatsAppAdminBot() {
  console.log('üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp –∞–¥–º–∏–Ω-–±–æ—Ç–∞...');
  
  try {
    const client = new Client({
      authStrategy: new LocalAuth({
        clientId: "test-admin-bot"
      }),
      puppeteer: {
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
      }
    });

    client.on('qr', (qr) => {
      console.log('‚úÖ QR –∫–æ–¥ –∞–¥–º–∏–Ω-–±–æ—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
      qrcode.generate(qr, { small: true });
    });

    client.on('ready', () => {
      console.log('‚úÖ WhatsApp –∞–¥–º–∏–Ω-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      console.log(`üì± –ù–æ–º–µ—Ä: ${client.info.wid.user}`);
    });

    client.on('authenticated', () => {
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–∞');
    });

    client.on('auth_failure', (msg) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω-–±–æ—Ç–∞:', msg);
    });

    await client.initialize();
    
    // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setTimeout(() => {
      client.destroy();
      console.log('‚úÖ –¢–µ—Å—Ç –∞–¥–º–∏–Ω-–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω\n');
    }, 5000);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞:', error.message);
  }
}

// –¢–µ—Å—Ç WhatsApp –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞
async function testWhatsAppClientBot() {
  console.log('üí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞...');
  
  try {
    const client = new Client({
      authStrategy: new LocalAuth({
        clientId: "test-client-bot"
      }),
      puppeteer: {
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
      }
    });

    client.on('qr', (qr) => {
      console.log('‚úÖ QR –∫–æ–¥ –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
      qrcode.generate(qr, { small: true });
    });

    client.on('ready', () => {
      console.log('‚úÖ WhatsApp –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      console.log(`üì± –ù–æ–º–µ—Ä: ${client.info.wid.user}`);
    });

    client.on('authenticated', () => {
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–∞');
    });

    client.on('auth_failure', (msg) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞:', msg);
    });

    await client.initialize();
    
    // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setTimeout(() => {
      client.destroy();
      console.log('‚úÖ –¢–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω\n');
    }, 5000);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç–∞:', error.message);
  }
}

// –¢–µ—Å—Ç API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
async function testWhatsAppAPI() {
  console.log('üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp API...');
  
  try {
    const axios = require('axios');
    
    // –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const testNotification = {
      type: 'application_submitted',
      data: {
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç',
        phone: '+77771234567',
        amount: '1000000'
      }
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    console.log('üìã –î–∞–Ω–Ω—ã–µ:', JSON.stringify(testNotification, null, 2));
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å –∫ API
    console.log('‚úÖ API —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω (—Å–∏–º—É–ª—è—Ü–∏—è)');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ WhatsApp –±–æ—Ç–æ–≤...\n');
  
  await testWhatsAppAdminBot();
  await testWhatsAppClientBot();
  await testWhatsAppAPI();
  
  console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
  console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
  console.log('‚úÖ WhatsApp –∞–¥–º–∏–Ω-–±–æ—Ç: –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
  console.log('‚úÖ WhatsApp –∫–ª–∏–µ–Ω—Ç-–±–æ—Ç: –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
  console.log('‚úÖ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
  console.log('\nüì± –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('1. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
  console.log('2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞');
  console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runAllTests().catch(console.error);
